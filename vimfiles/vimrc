if has('win32') || has('win64')
    set   termencoding=cp932
endif
if has('linux')
set   path+=/usr/include/**
endif

" File & Edit
set   backspace=indent,eol,start
set   encoding=utf-8
set   fileencoding=utf-8
set   fileencodings=ucs-bom,utf-8,cp932
set nobackup
set nowritebackup
set noswapfile
set noundofile
if has('unnamedplus')
    set clipboard&
    set clipboard^=unnamedplus
endif

" User Interface & Appearence
set notitle
set noruler
set nonumber
set   laststatus=2
set   statusline =%n\ %<%f%R%M,%{&ff}%y%h%w%q
set   statusline+=\ %{coc#status()}
set   statusline+=%=\ %(%l,%c%V%)\ %p%%
set   statusline+=\ %#warningmsg#
set   statusline+=%*
set   wildmenu
set   mouse=

" Search
set   hlsearch
set   smartcase
set nowrapscan

" Misc.
if executable('rg')
    set   grepprg=rg\ --vimgrep
endif
set  wildignore =*.swp,*.~*
set  wildignore+=*.o,*.obj
set  wildignore+=*.so,*.dll
set  wildignore+=*.py[cod]
set  wildignore+=*.min.*
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
highlight ExtraWhitespace ctermbg=red guibg=red

" Plugins
"call pathogen#infect()
call plug#begin()
Plug 'https://github.com/nanotech/jellybeans.vim.git',  { 'tag': '*' }

Plug 'https://github.com/justinmk/vim-sneak.git',       { 'tag': '*' }
Plug 'https://github.com/tpope/vim-surround',           { 'tag': '*' }

Plug 'https://github.com/tpope/vim-fugitive',           { 'tag': '*' }

Plug 'sheerun/vim-polyglot',                            { 'tag': '*' }
Plug 'neoclide/coc.nvim',                               { 'tag': '*', 'branch': 'release' }
call plug#end()

filetype indent plugin on
syntax on

" Color scheme (note: load the plugin before this)
set t_Co=256
colorscheme jellybeans

" Keymaps
    nmap         ]l    :lnext<CR>
    nmap         [l    :lprevious<CR>
    nmap         ]q    :cnext<CR>
    nmap         [q    :cprevious<CR>
    nmap <silent>[g    <Plug>(coc-diagnostic-prev)
    nmap <silent>]g    <Plug>(coc-diagnostic-next)
    nmap <silent>gd    <Plug>(coc-definition)
    nmap <leader>r     <Plug>(coc-rename)
    nmap <leader>f     <Plug>(coc-format)
    vmap <leader>f     <Plug>(coc-format-selected)
    nmap         <C-p> :CocList files<CR>

     " Move forward/backward till next non-wsp at same the colum
     " https://vi.stackexchange.com/a/693
	 map <silent><C-j> :call search('\%' . virtcol('.') . 'v\S', 'W')<CR>
	 map <silent><C-k> :call search('\%' . virtcol('.') . 'v\S', 'bW')<CR>

" et=expandtab, ts=tabstop, sts=softtabstop, sw=shiftwidth
set shiftround
set et ts=4 sts=4 sw=4
augroup indent
    autocmd!
    autocmd FileType gitconfig setlocal noet ts=8 sts=8 sw=8
    autocmd FileType go        setlocal noet ts=4 sts=4 sw=4
    autocmd FileType make      setlocal noet ts=8 sts=8 sw=8
    autocmd FileType html      setlocal noet ts=2 sts=2 sw=2
augroup END

augroup GolangSettings
    autocmd!
    autocmd FileType go nmap <leader>b  <Plug>(go-build)
    autocmd FileType go nmap <leader>r  <Plug>(go-run)
    let g:go_auto_sameids = 1
augroup END

augroup PythonSettings
    autocmd!
    autocmd FileType python set foldmethod=indent
    autocmd FileType python set foldlevel=999
    let g:jedi#popup_on_dot = 0
    let g:jedi#popup_select_first = 0
augroup END

augroup RustSettings
    autocmd!
    autocmd FileType rust nmap <leader>b :make build<cr>
    autocmd FileType rust nmap <leader>t :make test<cr>
    let g:rust_cargo_check_tests = 1
augroup END
