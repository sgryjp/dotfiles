if has('win32') || has('win64')
    set   termencoding=cp932
endif
if has('linux')
set   path+=/usr/include/**
endif

" File & Edit
set   backspace=indent,eol,start
set   encoding=utf-8
set   fileencoding=utf-8
set   fileencodings=ucs-bom,utf-8,cp932
set nobackup
set nowritebackup
set noswapfile
set noundofile
if has('unnamedplus')
    set clipboard&
    set clipboard^=unnamedplus
endif

" User Interface & Appearence
set notitle
set noruler
set nonumber
set   laststatus=2
set   statusline =%n\ %<%f%R%M,%{&ff}%y%{FugitiveStatusline()}%h%w%q
set   statusline+=%=\ %(%l,%c%V%)\ %p%%
set   statusline+=\ %#warningmsg#
set   statusline+=%{SyntasticStatuslineFlag()}
set   statusline+=%*
set   wildmenu
set   mouse=
if !has('gui_running') && exists('&termguicolors') && $COLORTERM ==# 'truecolor'
    set termguicolors
endif
colorscheme jellybeans

" Search
set   hlsearch
set   smartcase
set nowrapscan

" Misc.
set   grepprg=rg\ --vimgrep
set  wildignore =*.swp,*.~*
set  wildignore+=*.o,*.obj
set  wildignore+=*.so,*.dll
set  wildignore+=*.py[cod]
set  wildignore+=*.min.*
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
highlight ExtraWhitespace ctermbg=red guibg=red

" Keymaps
     map ]l        :lnext<CR>
     map [l        :lprevious<CR>
     map ]q        :cnext<CR>
     map [q        :cprevious<CR>
     map <C-n>     :cnext<CR>
     map <C-m>     :cprevious<CR>
nnoremap <leader>a :cclose<CR>

" Plugins
"call pathogen#infect()
call plug#begin()
Plug 'https://github.com/justinmk/vim-sneak.git',       { 'tag': '*' }
Plug 'https://github.com/tpope/vim-surround',           { 'tag': '*' }

Plug 'https://github.com/ctrlpvim/ctrlp.vim',           { 'tag': '*' }
Plug 'https://github.com/tpope/vim-fugitive',           { 'tag': '*' }

Plug 'https://github.com/vim-syntastic/syntastic'
Plug 'https://github.com/fatih/vim-go',                 { 'tag': '*' }
Plug 'https://github.com/davidhalter/jedi-vim',         { 'tag': '*' }
Plug 'https://github.com/JuliaEditorSupport/julia-vim'
Plug 'https://github.com/rust-lang/rust.vim.git'
call plug#end()

filetype indent plugin on
syntax on

" et=expandtab, ts=tabstop, sts=softtabstop, sw=shiftwidth
set shiftround
set et ts=4 sts=4 sw=4
augroup indent
    autocmd!
    autocmd FileType gitconfig setlocal noet ts=8 sts=8 sw=8
    autocmd FileType go        setlocal noet ts=4 sts=4 sw=4
    autocmd FileType make      setlocal noet ts=8 sts=8 sw=8
    autocmd FileType html      setlocal noet ts=2 sts=2 sw=2
augroup END

augroup GolangSettings
    autocmd!
    autocmd FileType go nmap <leader>b  <Plug>(go-build)
    autocmd FileType go nmap <leader>r  <Plug>(go-run)
    let g:go_auto_sameids = 1
augroup END

augroup PythonSettings
    autocmd!
    autocmd FileType python set foldmethod=indent
    autocmd FileType python set foldlevel=999
    let g:jedi#popup_on_dot = 0
    let g:jedi#popup_select_first = 0
augroup END

augroup RustSettings
    autocmd!
    autocmd FileType rust nmap <leader>b :make build<cr>
    autocmd FileType rust nmap <leader>t :make test<cr>
    autocmd FileType rust nmap <leader>f :RustFmt<cr>
    let g:rust_cargo_check_tests = 1
augroup END

" Plugin settings
let g:ctrlp_custom_ignore = '\v[\/](__pycache__|node_modules|target)'
let g:syntastic_stl_format = "[L%F,%t]"
